{"version":3,"sources":["pages/tictactoe.js","pages/stories.js","App.js","reportWebVitals.js","index.js"],"names":["Square","props","className","onClick","value","Board","status","useState","Array","fill","squares","setSquares","next","setNext","winner","lines","i","length","a","b","c","calculateWinner","renderSquare","newSquares","slice","handleClick","class","style","float","Game","Stories","title","useParams","location","useLocation","responded","setResponded","response","setResponse","pageNum","setPageNum","numPages","setNumPages","skipTo","setSkipTo","error","setError","useEffect","fetch","then","res","text","catch","err","console","basePath","pathname","lastIndexOf","changePage","dir","goto","num","alert","path","split","map","str","fileName","storyName","to","renderLink","padding","margin","display","height","onChange","event","target","parseInt","width","paddingbottom","file","onLoadSuccess","pdf","onLoadError","message","onSourceError","position","zIndex","renderMode","pageNumber","Home","App","APIResponse","setAPIResponse","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6fbba0de.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './tictactoe.css';\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nfunction Square(props) {\r\n    return (\r\n        <button className=\"square\" onClick={() => { props.onClick() }}>\r\n            {props.value}\r\n        </button>\r\n    );\r\n}\r\n\r\n\r\nfunction Board() {\r\n\r\n    var [squares, setSquares] = useState(Array(9).fill(null));\r\n    var [next, setNext] = useState('X');\r\n\r\n    const winner = calculateWinner(squares);\r\n    let status;\r\n    if (winner) {\r\n        status = 'Winner: ' + winner;\r\n    } else {\r\n        status = 'Next player: ' + next;\r\n    }\r\n\r\n    function resetClick() {\r\n        setSquares(Array(9).fill(null));\r\n        setNext('X')\r\n    }\r\n    \r\n    function handleClick(i) {\r\n        if (squares[i] === null && !winner) {\r\n            const newSquares = squares.slice();\r\n            newSquares[i] = next;\r\n            setNext(next === 'X' ? 'O' : 'X');\r\n            setSquares(newSquares);\r\n        }\r\n    }\r\n\r\n    function renderSquare(i) {\r\n        return <Square\r\n            value={squares[i]}\r\n            onClick={() => handleClick(i)}\r\n        />;\r\n    }\r\n\r\n    return (\r\n        <div class=\"game-body\">\r\n            <div className=\"status\">{status}</div>\r\n            <div className=\"board-row\">\r\n                {renderSquare(0)}\r\n                {renderSquare(1)}\r\n                {renderSquare(2)}\r\n            </div>\r\n            <div className=\"board-row\">\r\n                {renderSquare(3)}\r\n                {renderSquare(4)}\r\n                {renderSquare(5)}\r\n            </div>\r\n            <div className=\"board-row\">\r\n                {renderSquare(6)}\r\n                {renderSquare(7)}\r\n                {renderSquare(8)}\r\n            </div>\r\n            <button style={{float:\"left\"}} onClick={() => resetClick()}>Reset Board</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function Game () {\r\n    return (\r\n        <div className=\"game\">\r\n            <p>This subpage was made using React's beginner tutorial. It wasn't my goal to figure out how their CSS worked, so the board will remain on the left.</p>\r\n            <div className=\"game-board\">\r\n                <Board />\r\n                <p>\r\n                    a<br></br>a<br></br>a<br></br>a<br></br>a<br></br>a<br></br>a<br></br>a<br></br>a<br></br>a<br></br>a<br></br>a<br></br>a<br></br>a<br></br>\r\n                    a<br></br>a<br></br>a<br></br>a<br></br>a<br></br>a<br></br>a<br></br>a<br></br>a<br></br>a<br></br>a<br></br>a<br></br>a<br></br>a<br></br>\r\n                </p>\r\n            </div>\r\n            <div className=\"game-info\">\r\n                <div>{/* status */}</div>\r\n                <ol>{/* TODO */}</ol>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n// ========================================\r\n\r\n/*ReactDOM.render(\r\n    \r\n    <Game />,\r\n    document.getElementById('root')\r\n);*/\r\n","import React, { useState, useEffect } from 'react';\r\nimport './stories.css';\r\nimport { Route, Link, useLocation, useParams, Switch } from 'react-router-dom';\r\nimport { Document, Page } from 'react-pdf/dist/esm/entry.webpack';\r\n\r\n\r\nexport function Stories() {\r\n\r\n    let { title } = useParams();\r\n    let location = useLocation();\r\n    let [ responded, setResponded ] = useState(true);\r\n    let [response, setResponse] = useState('response');\r\n    let [pageNum, setPageNum] = useState(1);\r\n    let [numPages, setNumPages] = useState(0);\r\n    let [skipTo, setSkipTo] = useState(1);\r\n    let [error, setError] = useState('');\r\n\r\n    function retrieve() {\r\n        fetch('/api/stories/' + title)\r\n            .then((res) => res.text())\r\n            .then((res) => { setResponse(res); setResponded(true); })\r\n            .catch((err) => {\r\n                console.error('Error: ', err);\r\n                setError(err);\r\n            });\r\n    }\r\n    useEffect(() => {\r\n        if (title === 'Index' || title === 'index') {\r\n            setResponded(false);\r\n            retrieve();\r\n        } else {\r\n            setResponded(true);\r\n            setPageNum(1);\r\n            setNumPages(0);\r\n        }\r\n    }, [location]);\r\n\r\n    let basePath = location.pathname.slice(0, location.pathname.lastIndexOf('/'))\r\n\r\n    function renderLink(fileName) {\r\n\r\n        let storyName = fileName.slice(0, fileName.lastIndexOf('.pdf'));\r\n\r\n        return (\r\n            <Link to={basePath + '/' + storyName}>\r\n                <h4>{storyName}</h4>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n    function changePage(dir) {\r\n        if (pageNum + dir > 0 && pageNum + dir <= numPages) {\r\n            setPageNum(pageNum + dir);\r\n        }\r\n    }\r\n\r\n    function goto(num) {\r\n        if (num > 0 && num <= numPages) {\r\n            setPageNum(num);\r\n        } else {\r\n            alert('Invalid input detected.');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"stories\">\r\n            <h1>{title}</h1>\r\n            <Switch>\r\n                <Route path={basePath + \"/Index\"}>\r\n                    {responded ? response.split(',').map((str) => renderLink(str)) : 'Retrieving file names...'}\r\n                    <p>\r\n                        This is where some of my writing projects are. I spent quite a bit of time figuring out how to fetch pdfs from Express and displaying them properly. \r\n                        Unfortunately react-pdf doesn't work well with sticky headers, so I had to scrap that.\r\n                    </p>\r\n                </Route>\r\n                <Route path={basePath + \"/:title?\"}>\r\n                    <div className=\"wrapper\">\r\n                        <header\r\n                            style={{padding:'1vh'}}>\r\n                            <ul style={{ margin: '0 0 auto', display: 'inline-block' }}>\r\n                                <button onClick={() => goto(1)}>\r\n                                    Start\r\n                                </button>\r\n                                <button onClick={() => changePage(-1)}>\r\n                                    {pageNum - 1 > 0 ? 'Prev Page' : 'At First Page'}\r\n                                </button>\r\n                                <button onClick={() => changePage(1)}>\r\n                                    {pageNum + 1 <= numPages ? 'Next Page' : 'At Last Page'}\r\n                                </button>\r\n                                <button onClick={() => goto(numPages)}>\r\n                                    End\r\n                                </button>\r\n                            </ul>\r\n                        </header>\r\n                        <header\r\n                            style={{ padding: '1vh' }}>\r\n                            <ul style={{ margin: '0 0 auto', display: 'inline-block' }}>\r\n                                <textarea\r\n                                    style={{height:'3vh'}}\r\n                                    value={skipTo} onChange={(event) => { setSkipTo(event.target.value) }} />\r\n                                <button\r\n                                    style={{ height:'3vh' }}\r\n                                    onClick={() => goto(parseInt(skipTo, 10))}>\r\n                                    {'Go To Page ' + skipTo}\r\n                                </button>\r\n                            </ul>\r\n                        </header>\r\n                        <header>\r\n                            <ul style={{ margin: '0 0 auto', display: 'inline-block' }}>\r\n                                <Link to={basePath + \"/index\"}>\r\n                                    <button style={{ float: \"right\", width: \"10vh\" }}>\r\n                                        Index\r\n                                    </button>\r\n                                </Link>\r\n                            </ul>\r\n                        </header>\r\n                        <p>{'Page ' + pageNum + ' of ' + numPages}</p>\r\n                        <Document\r\n                            style={{ paddingbottom: '10vh' }}\r\n                            file={'/api/stories/' + title}\r\n                            onLoadSuccess={(pdf) => setNumPages(pdf.numPages)}\r\n                            onLoadError={(err) => setError(err.message)}\r\n                            onSourceError={(err) => setError(err.message)}\r\n                        >\r\n                            <Page\r\n                                style={{ position: 'relative', zIndex: '0' }}\r\n                                onLoadError={(err) => setError(err.message)}\r\n                                renderMode='canvas'\r\n                                pageNumber={pageNum}\r\n                            />\r\n                        </Document>\r\n                    </div>\r\n                </Route>\r\n            </Switch>\r\n            <p>{error !== '' ? 'Something has gone wrong. Please report the following error. ' + error : ''}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\n// ========================================\r\n\r\n/*ReactDOM.render(\r\n    \r\n    <Game />,\r\n    document.getElementById('root')\r\n);*/\r\n","import './App.css';\r\nimport { useEffect, useState } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n} from 'react-router-dom';\r\nimport { Game } from './pages/tictactoe.js';\r\nimport { Stories } from './pages/stories.js';\r\n\r\n// NEXT STEPS\r\n\r\n// MOVING ALL THE STUFF TO THEIR INDIVIDUAL FUNCTIONS SO WE CAN USE HOOKS\r\n// IF IT DOESN'T WORK LIKE THAT THEN GG\r\n\r\nfunction Home() {\r\n    return (\r\n        <div>\r\n            <p>hello!</p>\r\n            <p>There's not a lot here. I was simply learning the basics of React.</p>\r\n            <p>You can reach me at damienho02@outlook.com</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction App() {\r\n    let [APIResponse, setAPIResponse] = useState(\"Awaiting server response...\");\r\n\r\n    function checkAPI() {\r\n        fetch('/api/testAPI')\r\n            .then(res => res.text())\r\n            .then(res => setAPIResponse(res))\r\n            .catch(err => {\r\n                console.error('Error: ', err);\r\n                setAPIResponse('Server is inactive or unresponsive. Some services may not function. Refreshing may resolve.')\r\n            });\r\n    }\r\n\r\n    //Load dependencies (has to be done at top level, annoying)\r\n    useEffect(() => {\r\n        checkAPI();\r\n    }, []);\r\n\r\n    return (\r\n        <html>\r\n            <Router>\r\n                <div className=\"top-bar\">\r\n                    <ul class=\"navigation\">\r\n                        <Link class=\"navigation-item\" to='/'>Home</Link>\r\n                        <Link class=\"navigation-item\" to='/tictactoe'>Tic Tac Toe</Link>\r\n                        <Link class=\"navigation-item\" to='/stories/Index'>My Writing</Link>\r\n                    </ul>\r\n                </div>\r\n\r\n                    <body>\r\n                        <div class='content'>\r\n                            <Switch>\r\n                                <Route path=\"/tictactoe\">\r\n                                    <Game />\r\n                                </Route>\r\n                                <Route path=\"/stories/:title?\">\r\n                                    <Stories />\r\n                                </Route>\r\n                                <Route exact path=\"/\">\r\n                                    <Home />\r\n                                </Route>\r\n                                <Route path=\"*\">\r\n                                    <p>This page doesn't exactly exist.</p>\r\n                                </Route>\r\n                            </Switch>\r\n                        </div>\r\n                        <footer class='footer'>{APIResponse}</footer>\r\n                </body>\r\n\r\n            </Router>\r\n        </html>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n/*<div class=\"explain-box\"\r\n                        onMouseEnter={() => setWelcomeText('noooooooooooooooooooooooooooooooooooooo\\nooooooooooooooooooooooooooooo\\nooooooooooooooooooooooo')}\r\n                        onMouseLeave={() => setWelcomeText(initWelcomeText)}>\r\n                            <div class=\"explain\">\r\n                                <Switch>\r\n                                    <Route path=\"/tictactoe\">\r\n                                            This is from the preliminary stages of learning React and CSS. I followed the tic-tac-toe tutorial up until completing the base features.\r\n                                            Unfortunately, centering the game does not end well, and I did not want to rewrite the styling to make it work.<br></br><br></br>\r\n                                            The a's are here to test the stickiness of the navigation menu and the summary (this).\r\n                                    </Route>\r\n                                    <Route path='/stories/:title'>\r\n                                        I like to write as a hobby. Here you can see all my excerpts and enjoy/laugh.\r\n                                    </Route>\r\n                                    <Route exact path='/'>\r\n                                        <p>\r\n                                            {welcomeText}\r\n                                        </p>\r\n                                    </Route>\r\n                                    <Route path='*'>\r\n                                        What are you doing here?\r\n                                    </Route>\r\n                                </Switch>\r\n                            </div>\r\n                        </div>\r\n                    </div>*/","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}